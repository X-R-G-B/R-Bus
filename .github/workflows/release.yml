name: Release

on:
  push:
    branches: [feature/RB-15]

env:
  BRANCH: "feature/RB-15"

jobs:
  release-create:
    permissions: write-all
    runs-on: ubuntu-latest

    outputs:
      release: ${{ steps.release.outputs.release_tag }}

    steps:
    - name: Checkout
      uses: actions/checkout@v4
      with:
        fetch-depth: 0

    - id: release
      name: Create Release
      if: github.repository != 'EpitechPromo2026/B-CPP-500-TLS-5-1-rtype-xavier.mitault.git'
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        export GITHUB_OUTPUT=$GITHUB_OUTPUT
        bash ./.github/workflows/release.sh "${{ env.BRANCH }}"

  release-windows:
    runs-on: windows-latest
    needs: [release-create, boost-to-tar, raylib-to-tar]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install winget
      uses: Cyberboss/install-winget@v1
      with:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}

    - name: Install dependencies
      run: ./scripts/install-deps-windows.ps1

    - name: Build
      run: ./scripts/bundle-windows.ps1

    - name: LIST ALL
      run: Get-ChildItem build -Recurse

    - name: Upload To Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.release-create.outputs.release }} ./r-type-windows.zip
        gh release upload ${{ needs.release-create.outputs.release }} ./r-type-windows.exe

  release-linux:
    runs-on: ubuntu-latest
    needs: [release-create, boost-to-tar, raylib-to-tar]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: sudo ./scripts/install-deps-linux.sh

    - name: Build
      run: ./scripts/bundle-linux.sh

    - name: LIST ALL
      run: ls -Rl build

    - name: Upload To Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.release-create.outputs.release }} ./r-type-linux.tar.gz
        gh release upload ${{ needs.release-create.outputs.release }} ./r-type-linux.sh

  release-macos:
    runs-on: macos-latest
    needs: [release-create, boost-to-tar, raylib-to-tar]

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install dependencies
      run: ./scripts/install-deps-macos.sh

    - name: Build
      run: ./scripts/bundle-macos.sh

    - name: LIST ALL
      run: ls -Rl build

    - name: Upload To Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.release-create.outputs.release }} ./r-type-macos.zip
        # gh release upload ${{ needs.release-create.outputs.release }} ./r-type-linux.sh

  boost-to-tar:
    runs-on: ubuntu-latest
    needs: release-create

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install deps
      run: sudo apt-get update && sudo apt-get install -y tar git

    - name: Get Boost
      run: |
        git clone https://github.com/boostorg/boost.git boost-repo
        cd boost-repo || exit 14
        git checkout $(git describe --tags --abbrev=0)
        cd ..

    - name: To Tar
      run: |
        tar -cvf ../boost.tar boost-repo

    - name: Upload To Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.release-create.outputs.release }} ./boost.tar

  raylib-to-tar:
    runs-on: ubuntu-latest
    needs: release-create

    steps:
    - name: Checkout
      uses: actions/checkout@v4

    - name: Install deps
      run: sudo apt-get update && sudo apt-get install -y tar git

    - name: Get Raylib
      run: |
        git clone https://github.com/raysan5/raylib.git raylib-repo
        cd raylib-repo || exit 14
        git checkout ${{ env.RAYLIB_TAG }}
        cd ..

    - name: To Tar
      run: |
        tar -cvf raylib.tar raylib-repo

    - name: Upload To Release
      env:
        GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      run: |
        gh release upload ${{ needs.release-create.outputs.release }} ./raylib.tar
